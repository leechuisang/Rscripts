## An alternative to using plater(), multiple sheets can be imported from .xlsx
## and converted to columnar data using the melt() function and then merged
## together based on Well_ID. This method can be further automated by grouping
## data such that Day1_Values and Day1_Keys can be processed together, and allow
## Day2 etc. data to be processed in the same way in the same .xlsx file.
## Code for this is ongoing

# Given a table containing data, e.g.:
> raw_data
   X     1     2     3     4     5     6     7     8 NA
1  A 1.532 1.522 0.650 0.642 0.720 0.717 0.050 0.052 NA
2  B 0.844 0.844 0.450 0.464 0.740 0.736 0.051 0.052 NA
3  C 0.432 0.423 0.602 0.603 0.718 0.717 0.049 0.057 NA
4  D 0.257 0.255 0.715 0.713 0.784 0.787 0.053 0.056 NA
5  E 0.155 0.154 0.749 0.755 0.927 0.909 0.052 0.053 NA
6  F 0.063 0.059 0.779 0.781 0.905 0.891 0.577 0.581 NA
7    1.000 2.000 3.000 4.000 5.000 6.000 7.000 8.000 NA
8  G 1.518 1.527 0.769 0.772 0.764 0.767 0.052 0.053 NA
9  H 0.854 0.842 0.823 0.815 0.669 0.671 0.050 0.050 NA
10 I 0.437 0.435 0.820 0.820 0.842 0.846 0.054 0.054 NA
11 J 0.255 0.289 0.750 0.750 0.909 0.911 0.054 0.053 NA
12 K 0.156 0.184 0.808 0.802 0.861 0.862 0.052 0.054 NA
13 L 0.063 0.060 0.817 0.814 0.824 0.832 0.568 0.574 NA

# Remove any rows like row 7, such that $X is blank
> filtered_data <- raw_data[!raw_data$X=="",]

# Then melt the data so that plate data is gathered into
# rows1-13 and column $X
> my_data <- melt(filtered_data, id="X", na.rm=TRUE)

# Rename the columns of my_data to see where the plate data has moved to
> colnames(my_data) <- c("Row", "Col", "OD")

# Combine the plate row and column to generate $Well_ID
> my_data$Well_ID <- str_c(my_data$Row, my_data$Col)

> head(my_data)      
        Row Col    OD Well_ID
1   A   1 1.532      A1
2   B   1 0.844      B1
3   C   1 0.432      C1
4   D   1 0.257      D1
5   E   1 0.155      E1
6   F   1 0.063      F1

## === To melt data containing non-factorial characters, e.g. ===
> raw_legend <- read.xls(str_c(results_dir, query_raw), sheet=pages)
> head(raw_legend)
  X     1     2  3  4  5  6    7    8
1 A    S1    S1 B1 B1 D1 D1 <NA> <NA>
2 B    S2    S2 B2 B2 D2 D2 <NA> <NA>
3 C    S3    S3 B3 B3 D3 D3 <NA> <NA>
4 D    S4    S4 C1 C1 E1 E1 <NA> <NA>
5 E    S5    S5 C2 C2 E2 E2 <NA> <NA>
6 F Blank Blank C3 C3 E3 E3   T0   T0
> colnames(raw_legend) <- c("X", 1:(length(raw_legend)-1))
> filtered_legend <- raw_legend[!raw_legend$X=="",]
# Convert data to character then reapply to the dataframe
> filtered_legend [2:(length(raw_legend)] <- sapply(filtered_legend[2:(length(raw_legend)], as.character)
> my_legend <- melt(filtered_legend, id="X", na.rm=TRUE)
> colnames(my_legend) <- c("Row", "Col", "Key")
> my_legend$Well_ID <- str_c(my_legend$Row, my_legend$Col)
> head(my_legend)
    Row Col   Key Well_ID
1   A   1    S1      A1
2   B   1    S2      B1
3   C   1    S3      C1
4   D   1    S4      D1
5   E   1    S5      E1
6   F   1 Blank      F1

# Merge the two data sets so that R can now process the microplate data
> merged_data <- merge(my_data, my_legend, by="Well_ID")
> final_data <- merged_data[,c("Well_ID", "OD", "Key")]
